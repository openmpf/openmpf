#############################################################################
# NOTICE                                                                    #
#                                                                           #
# This software (or technical data) was produced for the U.S. Government    #
# under contract, and is subject to the Rights in Data-General Clause       #
# 52.227-14, Alt. IV (DEC 2007).                                            #
#                                                                           #
# Copyright 2017 The MITRE Corporation. All Rights Reserved.                #
#############################################################################

#############################################################################
# Copyright 2017 The MITRE Corporation                                      #
#                                                                           #
# Licensed under the Apache License, Version 2.0 (the "License");           #
# you may not use this file except in compliance with the License.          #
# You may obtain a copy of the License at                                   #
#                                                                           #
#    http://www.apache.org/licenses/LICENSE-2.0                             #
#                                                                           #
# Unless required by applicable law or agreed to in writing, software       #
# distributed under the License is distributed on an "AS IS" BASIS,         #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #
# See the License for the specific language governing permissions and       #
# limitations under the License.                                            #
#############################################################################
---
#file: roles/child/tasks/compregistration.yml

- name: "Run {{ item.componentName }} component setup"
  include: "{{ plugins_dir }}/{{ item.componentTLD }}/{{ item.componentSetupFile }}"
  vars:
    component_tld: "{{ item.componentTLD }}"
  when: item.componentSetupFile and item.register
  register: mpf_component_setup

# only register components that have no setup file or successfully completed their setup
- name: "Register {{ item.componentName }} component"
  uri:
    url: "{{ component_uri }}{{ plugins_dir }}/{{ item.componentDescriptorPath }}"
    method: GET
    follow_redirects: all
    force_basic_auth: yes
    user: "admin"
    password: "{{ admin_wfm_pw }}"
    status_code: 200
    return_content: yes
    timeout: 150
    validate_certs: no
  environment:
    no_proxy: "{{ master_host }}"
  run_once: true
  when: can_register_components and item.register and item.componentDescriptorPath
  register: registration_results
  failed_when: registration_results.status == 404
  delegate_to: "{{ master_host }}"

- name: Show component registration error message
  debug: msg="Could not register component {{ item.componentName }} . Error message was {{ registration_results.content }}"
  when: item.register and registration_results.status != 200
  run_once: true
  delegate_to: "{{ master_host }}"

  # Script usage: popvalues.py <mpf home directory> <component name> <component package filepath>
- name: "Populate components.json with {{ item.componentName }} component information"
  command: "python \"{{ mpf_home }}/manage/ansible/roles/master/files/popvalues.py\" \"{{ mpf_home }}\" \"{{ item.componentName }}\" \"{{ mpf_component_dir }}/{{ item.packageFilePath | basename }}\""
  args:
    chdir: "{{ mpf_home }}/share/components"
  when: item.register and item.componentName and item.packageFilePath and registration_results.status == 200
  run_once: true
  delegate_to: "{{ master_host }}"

  # Script usage: extcomponentuploaded.py <mpf home directory> <component name> <component package filepath>
- name: "Set {{ item.componentName }} component to UPLOADED state"
  command: "python \"{{ mpf_home }}/manage/ansible/roles/master/files/extcomponentuploaded.py\" \"{{ mpf_home }}\" \"{{ item.componentName }}\" \"{{ mpf_component_dir }}/{{ item.packageFilePath | basename }}\""
  args:
    chdir: "{{ mpf_home }}/share/components"
  when: "not item.register and '{{ item.componentState }}'!= 'REGISTERED' and item.packageFilePath and registration_results.status is not defined"
  run_once: true
  delegate_to: "{{ master_host }}"
