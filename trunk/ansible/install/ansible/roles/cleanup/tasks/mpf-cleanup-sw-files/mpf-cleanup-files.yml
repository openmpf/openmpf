#############################################################################
# NOTICE                                                                    #
#                                                                           #
# This software (or technical data) was produced for the U.S. Government    #
# under contract, and is subject to the Rights in Data-General Clause       #
# 52.227-14, Alt. IV (DEC 2007).                                            #
#                                                                           #
# Copyright 2017 The MITRE Corporation. All Rights Reserved.                #
#############################################################################

#############################################################################
# Copyright 2017 The MITRE Corporation                                      #
#                                                                           #
# Licensed under the Apache License, Version 2.0 (the "License");           #
# you may not use this file except in compliance with the License.          #
# You may obtain a copy of the License at                                   #
#                                                                           #
#    http://www.apache.org/licenses/LICENSE-2.0                             #
#                                                                           #
# Unless required by applicable law or agreed to in writing, software       #
# distributed under the License is distributed on an "AS IS" BASIS,         #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #
# See the License for the specific language governing permissions and       #
# limitations under the License.                                            #
#############################################################################
---
#file: roles/cleanup/tasks/mpf-cleanup-sw-files/mpf-cleanup-files.yml
  - name: Load MPF cleanup variables needed for cleaning up files from previous mpf releases
    include_vars: mpf-cleanup-sw-files/vars.yml

  - name: MPF cleanup, find old mpf files in the jars directory
    find:
      paths: "{{ mpf_home }}/jars"
      patterns: "*"
    register: oldjar_find

  - name: MPF cleanup, remove old mpf files in the jars directory
    file:
      path="{{ item.path }}"
      state=absent
    with_items: "{{ oldjar_find.files }}"
    when: "{{ oldjar_find.matched|int|default(0) }} > 0"

  - name: MPF cleanup, find old mpf files in the lib directory
    find:
      paths: "{{ mpf_home }}/lib"
      patterns: "*"
    register: oldlib_find

  - name: MPF cleanup, remove old mpf files in the lib directory
    file:
      path="{{ item.path }}"
      state=absent
    with_items: "{{ oldlib_find.files }}"
    when: "{{ oldlib_find.matched|int|default(0) }} > 0"

  - name: MPF cleanup, find old mpf files in the libdata directory
    find:
      paths: "{{ mpf_home }}/libdata"
      patterns: "*"
    register: oldlibdata_find

  - name: MPF cleanup, remove old mpf files in the libdat directory
    file:
      path="{{ item.path }}"
      state=absent
    with_items: "{{ oldlibdata_find.files }}"
    when: "{{ oldlibdata_find.matched|int|default(0) }} > 0"

  - name: MPF cleanup, find old mpf files in the bin directory
    find:
      paths: "{{ mpf_home }}/bin"
      patterns: "*"
    register: oldbin_find

  - name: MPF cleanup, remove old mpf files in the bin directory
    file:
      path="{{ item.path }}"
      state=absent
    with_items: "{{ oldbin_find.files }}"
    when: "{{ oldbin_find.matched|int|default(0) }} > 0"

  - name: MPF cleanup, find old mpf nodeServicesPalette.json file in the data directory
    find:
      paths: "{{ mpf_home }}/data"
      patterns: "nodeServicesPalette.json"
    register: oldNodePallet_find

  - name: MPF cleanup, remove old mpf nodeServicesPalette.json file in the data directory
    file:
      path="{{ item.path }}"
      state=absent
    with_items: "{{ oldNodePallet_find.files }}"
    when: "{{ oldNodePallet_find.matched|int|default(0) }} > 0"

  - name: MPF cleanup, find old mpf nodeManagerConfig.xml file in the data directory
    find:
      paths: "{{ mpf_home }}/data"
      patterns: "nodeManagerConfig.xml"
    register: oldNodeConfig_find

  - name: MPF cleanup, remove old mpf nodeManagerConfig.xml file in the data directory
    file:
      path="{{ item.path }}"
      state=absent
    with_items: "{{ oldNodeConfig_find.files }}"
    when: "{{ oldNodeConfig_find.matched|int|default(0) }} > 0"