#!/bin/bash

#############################################################################
# NOTICE                                                                    #
#                                                                           #
# This software (or technical data) was produced for the U.S. Government    #
# under contract, and is subject to the Rights in Data-General Clause       #
# 52.227-14, Alt. IV (DEC 2007).                                            #
#                                                                           #
# Copyright 2017 The MITRE Corporation. All Rights Reserved.                #
#############################################################################

#############################################################################
# Copyright 2017 The MITRE Corporation                                      #
#                                                                           #
# Licensed under the Apache License, Version 2.0 (the "License");           #
# you may not use this file except in compliance with the License.          #
# You may obtain a copy of the License at                                   #
#                                                                           #
#    http://www.apache.org/licenses/LICENSE-2.0                             #
#                                                                           #
# Unless required by applicable law or agreed to in writing, software       #
# distributed under the License is distributed on an "AS IS" BASIS,         #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #
# See the License for the specific language governing permissions and       #
# limitations under the License.                                            #
#############################################################################

# Tomcat7 init script.
#
# chkconfig:  - 80 20
# description:  Start/stop script for Tomcat7

# Source function library.
. /etc/rc.d/init.d/functions
. /etc/profile.d/mpf.sh

[ -f /etc/sysconfig/network ] && . /etc/sysconfig/network
[ "${NETWORKING}" = "no" ] && exit 0

prog="tomcat7"
[ -f /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog

TOMCATDEBUG=
# If necessary, the following flag may be added to the call to catalina.sh
# to enable the use of a security manager. The variable SECURITY would also
# need to be set in the tomcat.sysconfig file.
TOMCATSECURITY=${SECURITY:+"-security"}
CATALINA_HOME=/opt/apache-tomcat
WAITFOR=${WAITFOR:=10}
CATALINA_PID="/var/run/${prog}.pid"
RUN_SCRIPT="daemon --user=mpf ${CATALINA_HOME}/bin/catalina.sh"

CDIR=$(pwd)

# The following line does nothing if JAVA_HOME is set.  Otherwise, it prints
# "bash: JAVA_HOME: MUST BE CONFIGURED IN /etc/sysconfig/"
JUNK=${JAVA_HOME:?"MUST BE CONFIGURED IN /etc/sysconfig/$prog"}
if [ ! -d $JAVA_HOME ]; then
  echo "$JAVA_HOME doesn't exist!"
  exit 1
fi

if [ ! -d $CATALINA_HOME ]; then
  echo CATALINA_HOME does not exist as a valid directory: $CATALINA_HOME
  exit 1
fi

export CATALINA_HOME CATALINA_PID JAVA_HOME

cleanup() {
  rm -f ${CATALINA_PID}
}

echoFailure() {
  echo_failure
  echo
}

echoSuccess() {
  echo_success
  echo
}

echoWarning() {
  echo_warning
  echo
}

start() {
  echo -n "Starting $prog..."
  STATUS=$(status >/dev/null)
  R=$?
  if [ $R -eq 0 ]; then
    echo -n "$prog is already running."
    echoWarning
    return 0
  fi

  cd ${CATALINA_HOME}
  ${RUN_SCRIPT} start >>${CATALINA_HOME}/logs/catalina.out 2>&1
  RETVAL=$?
  cd ${CDIR}
  if [ $RETVAL -eq 0 ]; then
    echoSuccess
  else
    echoFailure
  fi
}

status() {
  RETVAL=1
  if [ -s ${CATALINA_PID} ]; then
    read kpid < ${CATALINA_PID}
    if checkpid $kpid 2>&1; then
      echo "$prog is running ($kpid)"
      RETVAL=0
    else
      echoWarning
      echo "The lock file was found but no process running for pid $kpid."
    fi
  else
    CHECKPROC="Dcatalina.home=${CATALINA_HOME}.*org.apache.catalina.startup.Bootstrap"
    pid="$(pgrep -f ${CHECKPROC})"
      if [ -n "$pid" ]; then
        echoWarning
        echo "$prog is running ($pid) but no PID file exists (or it's empty)."
        RETVAL=0
      else
        echo "$prog is stopped."
      fi
    fi
    return $RETVAL
}

stop() {
  echo -n "Stopping $prog..."
  echo

  if status >/dev/null; then
    ${RUN_SCRIPT} stop >>${CATALINA_HOME}/logs/catalina.out 2>&1

    COUNT=0
    while [ $COUNT -lt ${WAITFOR} ]; do
      if status >/dev/null; then
        echo -n "."
        sleep 1
      else
        echoSuccess
        cleanup
        return
      fi
      COUNT=$(expr  $COUNT + 1)
    done

    echo
    echo -n "$prog didn't stop, killing it softly..."
    CHECKPROC="Dcatalina.home=${CATALINA_HOME}.*org.apache.catalina.startup.Bootstrap"
    pid="$(pgrep -f ${CHECKPROC})"
    kill $pid
    sleep 4
    if status >/dev/null; then
      echo
      echo "Shutdown is taking too long, force stopping $prog."
      kill -9 $pid
      if status >/dev/null; then
        echoFailure
      else
        echoSuccess
        cleanup
        return
      fi
    else
      echoSuccess
      cleanup
      return
    fi
  else
    echoWarning
    echo -n "$prog is not running."
    echo
  fi
}

case "$1" in
  start)  start;;
  stop)   stop;;
  status) status;;
  restart) stop ; start;;
  *) echo "Usage: $0 [ start | stop | status | restart ]";;
esac
