#############################################################################
# NOTICE                                                                    #
#                                                                           #
# This software (or technical data) was produced for the U.S. Government    #
# under contract, and is subject to the Rights in Data-General Clause       #
# 52.227-14, Alt. IV (DEC 2007).                                            #
#                                                                           #
# Copyright 2019 The MITRE Corporation. All Rights Reserved.                #
#############################################################################

#############################################################################
# Copyright 2019 The MITRE Corporation                                      #
#                                                                           #
# Licensed under the Apache License, Version 2.0 (the "License");           #
# you may not use this file except in compliance with the License.          #
# You may obtain a copy of the License at                                   #
#                                                                           #
#    http://www.apache.org/licenses/LICENSE-2.0                             #
#                                                                           #
# Unless required by applicable law or agreed to in writing, software       #
# distributed under the License is distributed on an "AS IS" BASIS,         #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #
# See the License for the specific language governing permissions and       #
# limitations under the License.                                            #
#############################################################################

# When the Workflow Manager starts, it will check the persistent database for the users specified in this file.
# If a user does not exist in the database, it will be added. Note that if the user role or password is different in
# the database, that will take precedence over the information in this file.

# Passwords are encoded using bcrypt. Here are two ways you can encode a password:
#
# 1. Use Docker:
#    docker run --rm epicsoft/bcrypt hash <raw-password> 12
#
# 2. Use the OpenMPF password generator tool:
#    https://github.com/openmpf/openmpf/blob/master/trunk/mpf-password-generator/README.md

# Here's an example of an encoded password: $2a$12$PnqXmowXmFErAKYdP68l7esPXVkOpDnRoSMlqPwBj4qfEeIBlvqDC
# The first two fields are delimited by "$":
#   2a is the bcrypt algorithm version used
#   12 is the encoding strength (log rounds used)
# The last part is the salt and cipher text concatenated and encoded in a modified Base-64.

# Authentication is performed by the Spring security framework, which uses bcrypt to salt and hash what the user
# provides as a password during login, and compares the result to the encoded password in the persistent database.

# Format: <name>=<role>,<encoded-password>
# Use "user" for the non-admin role, "admin" for the admin role.
# User names cannot contain whitespace.

mpf=user,$2a$12$fXmzuWECXwvAVmXyKDdT/.XGLAd0aA9xoGzdE7VUa4nK9FI6eo6aW
admin=admin,$2a$12$kxtY8QmxrI.ZB6qtfXf01.8oiT3UXOiKq8e4Kz/gLwpZBEEUHub/O